on: [push]
name: Linux_Container_Workflow

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/Demoapp:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/Demoapp:${{ github.sha }}
            
       # - name: 'Setup Kubectl"
          #uses: azure/Setup-login@v1
          
        - name: 'Kubernetes Set context'
          uses: azure/k8s-set-context@v2
          with:
           kubeconfig: ${{secrets.KUBE_CONFIG}}
        - run: |
            #kubectl create namespace ${{ secrets.NAMESPACE }} --Server-dry-run -o json | kubectl apply -n Balckbird-aks -f -
            #kubectl -n Blackbird-aks expose deploy sampleapp --port 80 --type LoadBalancer -o yaml --Server-dry-run|kubectl apply -n Blackbird-aks -f -
            
        #- name: 'Deploy app to AKS'
          #uses: azure/k8s-deploy@v1
          #with:
          # manifests: |
           # manifests/deployment.yaml
           # manifests/service.yaml
         #  images: |
             #'${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}'
           #imagepullsecrets: |
           # ${{ secrets.REGISTRY_LOGIN_SERVER }}-registry-connection
          # action: deploy
       
       
          #imagepullsecrets: |
           # ${{ secrets.REGISTRY_LOGIN_SERVER }}
      #  namespace: ${{ env.NAMESPACE }}



